<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.database.DAO">

	<select id="login" parameterType="com.smhrd.model.UserVO"
		resultType="com.smhrd.model.UserVO">
		select user_id, user_gender, user_nick, user_region, joined_at, user_height, user_weight, user_profile_img, user_profile_info
		from tb_user
		where user_id = #{userId}
		and user_pw = #{userPw}
	</select>

	<insert id="join" parameterType="com.smhrd.model.UserVO">
		insert into tb_user(user_id,
		user_pw, user_name, user_nick, user_gender,
		user_region, user_weight,
		user_height, user_profile_img, user_profile_info)
		values(#{userId},#{userPw},#{userName},#{userNick},#{userGender},#{userRegion},#{userWeight},#{userHeight},#{userProfileImg},#{userProfileInfo})
	</insert>

	<insert id="post" parameterType="com.smhrd.model.PostVO">
		insert into tb_post
		(post_content, user_id, hash_tag)
		values(#{postContent},#{userId},#{hashTag})
	</insert>

	<select id="getpost" resultType="map">
		select post_content, user_nick
		from tb_post
		inner join tb_user on tb_post.user_id = tb_user.user_id
		order by post_idx desc
	</select>

	<update id="update" parameterType="com.smhrd.model.UserVO">
		update tb_user
		set user_pw =
		#{userPw}, user_nick=#{userNick}, user_region = #{userRegion},
		user_weight = #{userWeight}, user_height = #{userHeight},
		user_profile_img
		= #{userProfileImg}, user_profile_info = #{userProfileInfo}
		where user_id
		= #{userId}
	</update>

	<!-- 기온에 맞는 게시글들 가져오기 -->
	<select id="selectPosts" parameterType="com.smhrd.model.PostVO"
		resultType="com.smhrd.model.PostVO">
		SELECT *
		FROM tb_post
		WHERE post_temp BETWEEN #{postTemp} - 5 AND #{postTemp} + 5
	</select>

	<select id="search" resultType="map">
		select post_content, post_idx,
		hash_tag, user_nick
		from tb_post inner join tb_user
		on tb_post.user_id =
		tb_user.user_id
		where
		post_content like #{keyWord} or
		hash_tag like
		#{keyWord} or
		user_nick like
		#{keyWord}
		order by post_idx desc limit 5
	</select>

	<select id="commentselect" resultType="com.smhrd.model.CommentVO">
		select * from tb_comment where post_idx = #{postIdx}
	</select>
	
	<insert id="comment" parameterType="com.smhrd.model.CommentVO">
		insert into tb_comment (post_idx,cmt_content,user_id) values(#{postIdx},#{cmtContent},#{userId})
	</insert>

	<insert id="sendchat" parameterType="com.smhrd.model.ChatVO">
		insert into tb_chat(room_idx,
		chatter, chat, emoticon)
		values (#{roomIdx}, #{chatter}, #{chat},
		#{emoticon})
	</insert>

	<select id="selectchats" parameterType="com.smhrd.model.ChatVO"
		resultType="com.smhrd.model.ChatVO">
		select *
		from tb_chat
		where room_idx = #{roomIdx}
	</select>

	<insert id="createroom" parameterType="com.smhrd.model.RoomVO">
		insert into
		tb_room(room_title, user_id, room_limit, room_status)
		values (#{roomTitle},
		#{userId}, #{roomLimit}, #{roomStatus})
	</insert>

	<select id="selectrooms" parameterType="com.smhrd.model.RoomVO"
		resultType="com.smhrd.model.RoomVO">
		select *
		from tb_room
		where user_id=#{userId} or
		room_title=#{userId}
	</select>

	<select id="checkroom" parameterType="com.smhrd.model.RoomVO"
		resultType="com.smhrd.model.RoomVO">
		select *
		from tb_room
		where (user_id=#{userId} and
		room_title=#{roomTitle}) or (user_id=#{roomTitle} and
		room_title=#{userId})
	</select>

	<!-- 좋아요 기능 -->
	<insert id="insertLike" parameterType="com.smhrd.model.LikeVO">
		insert into
		tb_like(user_id, post_idx)
		values (#{userId}, #{postIdx})
	</insert>

	<delete id="deleteLike" parameterType="com.smhrd.model.LikeVO">
		delete from tb_like
		where user_id = #{userId} and post_idx = #{postIdx}
	</delete>

	<select id="selectLike" parameterType="com.smhrd.model.LikeVO"
		resultType="com.smhrd.model.LikeVO">
		select *
		from tb_like
		where user_id = #{userId} and post_idx =
		#{postIdx}
	</select>

	<select id="countLike" parameterType="com.smhrd.model.LikeVO"
		resultType="com.smhrd.model.LikeVO">
		select *
		from tb_like
		where post_idx = #{postIdx}
	</select>

	<!-- 유저 게시글 확인 기능 -->
	<select id="selectUserPosts"
		parameterType="com.smhrd.model.UserVO"
		resultType="com.smhrd.model.PostVO">
		select *
		from tb_post
		where tb_post.user_id = #{userId}
		order
		by tb_post.created_at desc
	</select>

	<insert id="insertPost" parameterType="com.smhrd.model.PostVO">
		insert into
		tb_post(post_content, user_id, hash_tag, post_temp)
		values (#{postContent},
		#{userId}, #{hashTag}, #{postTemp})
	</insert>

	<select id="lastInsertId" resultType="int">
		select LAST_INSERT_ID()
	</select>

	<insert id="insertFile" parameterType="com.smhrd.model.FileVO">
		insert into
		tb_file(file_rname, file_img, file_size, file_ext, post_idx)
		values (#{fileRname}, #{fileImg},
		#{fileSize}, #{fileExt}, #{postIdx})
	</insert>

	<!-- 크롤링 데이터 불러오기 -->
	<select id="selectCrawling" parameterType="com.smhrd.model.CrawlingVO"
		resultType="com.smhrd.model.CrawlingVO">
		select *
		from tb_crawling
		where season=#{season}
	</select>

	<select id="selectFile" parameterType="com.smhrd.model.FileVO"
		resultType="com.smhrd.model.FileVO">
		select *
		from tb_file
		where post_idx = #{postIdx}
	</select>

	<delete id="deleteFile" parameterType="com.smhrd.model.FileVO">
		delete
		from tb_file
		where post_idx = #{postIdx}
	</delete>
	
	<select id="selectRecentPosts" resultType="com.smhrd.model.PostVO">
		select *
		from tb_post
		order by created_at desc
	</select>
	
	<select id="postdetail" parameterType="com.smhrd.model.PostVO" resultType="com.smhrd.model.PostVO">
		select *
		from tb_post where post_idx=#{postIdx}
	</select>
	
	<delete id="deletePost" parameterType="com.smhrd.model.PostVO">
		delete from tb_post
		where post_idx = #{postIdx}
	</delete>
	
	<update id="updatePost" parameterType="com.smhrd.model.PostVO">
		update tb_post
		set post_content=#{postContent}, hash_tag=#{hashTag}, post_temp=#{postTemp}
		where post_idx = #{postIdx}
	</update>
	
	<update id="updateFile" parameterType="com.smhrd.model.FileVO">
		update tb_file
		set file_rname=#{fileRname}, file_img=#{fileImg}, file_size=#{fileSize}, file_ext=#{fileExt}
		where post_idx=#{postIdx}
	</update>
	
	<update id="updateUserInfo" parameterType="com.smhrd.model.UserVO">
		update tb_user
		set user_pw=#{userPw}, user_nick=#{userNick}, user_region=#{userRegion}, user_height=#{userHeight}, user_weight=#{userWeight}
		where user_id=#{userId}
	</update>
	
	<update id="updateProfileInfo" parameterType="com.smhrd.model.UserVO">
		update tb_user
		set user_nick=#{userNick}, user_profile_img=#{userProfileImg}, user_profile_info=#{userProfileInfo}
		where user_id=#{userId}
	</update>
	
	<delete id="deleteUserInfo" parameterType="com.smhrd.model.UserVO">
		delete from tb_user
		where user_id=#{userId}
	</delete>
	
	<select id="selectUserInfo" parameterType="com.smhrd.model.UserVO" resultType="com.smhrd.model.UserVO">
		select user_id, user_gender, user_nick, user_region, joined_at, user_height, user_weight, user_profile_img, user_profile_info
		from tb_user
		where user_id = #{userId}
	</select>
	
	<insert id="insertFollowing" parameterType="com.smhrd.model.FollowingVO">
		insert into tb_following(follower, followee)
		values (#{follower}, #{followee})
	</insert>
	
	<delete id="deleteFollowing" parameterType="com.smhrd.model.FollowingVO">
		delete from tb_following
		where follower = #{follower} and followee = #{followee}
	</delete>
	
	<select id="selectFollow" parameterType="com.smhrd.model.FollowingVO" resultType="com.smhrd.model.FollowingVO">
		select *
		from tb_following
		where follower = #{follower} and followee = #{followee}
	</select>

</mapper>